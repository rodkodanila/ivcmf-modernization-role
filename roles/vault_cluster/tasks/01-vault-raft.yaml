- name: Install base packages
  apt:
    name: [curl, unzip, jq, nfs-common]
    update_cache: yes

- name: Create vault user
  user:
    name: vault
    system: true
    shell: /usr/sbin/nologin
    create_home: false

- name: Download Vault
  copy:
    src: "vault-1_20_3"
    dest: "/usr/bin/vault"
    mode: '0755'

- name: Ensure directories
  file:
    path: "{{ item }}"
    state: directory
    owner: vault
    group: vault
    mode: '0750'
  loop:
    - "{{ raft_storage.path }}"
    - /etc/vault.d


- name: Render vault config
  template:
    src: vault.hcl.j2
    dest: /etc/vault.d/vault.hcl
    owner: vault
    group: vault
    mode: '0640'

- name: Install vault systemd unit
  template:
    src: vault.service.j2
    dest: /etc/systemd/system/vault.service
    mode: '0644'

# - name: Mount NFS share
#   mount:
#     path: "{{ nfs_mount }}"
#     src: "{{ nfs_server }}"
#     fstype: nfs
#     opts: "rw,vers=4"
#     state: mounted

- name: Copy snapshot script
  template:
    src: vault_raft_snapshot_to_nfs.sh.j2
    dest: /usr/local/bin/vault_raft_snapshot_to_nfs.sh
    owner: root
    group: root
    mode: '0755'

- name: Setup cron for snapshot
  copy:
    dest: /etc/cron.d/vault-snapshot
    content: |
      0 3 * * * root /usr/local/bin/vault_raft_snapshot_to_nfs.sh >> /var/log/vault-snapshot.log 2>&1

- name: Enable and start vault
  systemd:
    daemon_reload: yes
    name: vault
    enabled: yes
    state: started

# -------------------- CLUSTER INIT & JOIN --------------------
# Ждём, пока локальный API поднимется
- name: Wait for API to be up
  uri:
    url: "https://127.0.0.1:8200/v1/sys/health"
    method: GET
    status_code: [200, 429, 472, 501]
    return_content: yes
    validate_certs: no
  register: vault_health
  retries: 12
  delay: 5
  until: vault_health.status is defined and (vault_health.status in [200, 429, 472, 501])

# Init только на первой ноде и запись результата на контроллер
- name: Init cluster (only on first node)
  command: >
    /usr/bin/vault operator init -format=json 
  register: vault_init
  environment:
    VAULT_ADDR: "https://127.0.0.1:8200"
  when: inventory_hostname == groups['vault_raft'][0]

- name: Save init result to controller
  copy:
    content: "{{ vault_init.stdout }}"
    dest: "{{ playbook_dir }}/vault_raft_init.json"
    mode: '0600'
  delegate_to: localhost
  when:
    - inventory_hostname == groups['vault_raft'][0]
    - vault_init is defined


# Проверка, что init прошёл
# - name: Fail if init didn't produce json on leader
#   fail:
#     msg: "Vault init failed on leader or produced no output."
#   when:
#     - inventory_hostname == groups['vault_raft'][0]
#     - vault_init is not defined or vault_init.stdout is not defined

# # Чтение init.json с контроллера на всех нодах
# - name: Load init.json from controller
#   slurp:
#     src: "{{ playbook_dir }}/certs/vault_raft_init.json"
#   register: vault_init_data
#   delegate_to: localhost

# - name: Parse unseal key & root token
#   set_fact:
#     vault_unseal_key: "{{ (vault_init_data['content'] | b64decode | from_json).unseal_keys_b64[0] }}"
#     vault_root_token: "{{ (vault_init_data['content'] | b64decode | from_json).root_token }}"
# - name: Parse initialization results
#   set_fact:
#     vault_unseal_key: "{{ (vault_init.stdout | from_json).unseal_keys_b64[0] }}"
#     vault_root_token: "{{ (vault_init.stdout | from_json).root_token }}"
#   when: inventory_hostname != groups['vault_raft'][0]

# Followers: join cluster и unseal
# - name: Join node to raft cluster (followers)
#   command: >
#     /usr/bin/vault operator raft join http://{{ hostvars[groups['vault_raft'][0]].ansible_host }}:8200
#   environment:
#     VAULT_ADDR: "http://127.0.0.1:8200"
#   when: inventory_hostname != groups['vault_raft'][0]

# - name: Unseal vault node
#   command: >
#     /usr/bin/vault operator unseal {{  hostvars['vault1']['vault_unseal_key']  }}
#   environment:
#     VAULT_ADDR: "http://127.0.0.1:8200"
- name: Enable and start vault
  systemd:
    daemon_reload: yes
    name: vault
    enabled: yes
    state: restarted